name: Build Tauri App

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-node@v5
        with:
          node-version: 24

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - run: bun install

      - run: bun tauri build

      - run: |
          exe_file=$(ls src-tauri/target/release/*.exe | head -n 1)
          msi_file=$(ls src-tauri/target/release/bundle/msi/*.msi | head -n 1)
          nsis_file=$(ls src-tauri/target/release/bundle/nsis/*.exe | head -n 1)
          if [ -z "$exe_file" ] && [ -z "$msi_file" ] && [ -z "$nsis_file" ]; then
            exit 1
          fi

      - run: powershell -Command "Start-Process '$(ls src-tauri/target/release/*.exe | head -n 1)' -ArgumentList '--version' -Wait"

      - uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/*.exe
          if-no-files-found: error
          retention-days: 30

  build-macos-intel:
    runs-on: macos-15-intel
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 24
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-x86_64-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-x86_64-
            ${{ runner.os }}-cargo-
      - run: bun install
      - run: rustup target add x86_64-apple-darwin
      - run: bun tauri build --target x86_64-apple-darwin
      - run: |
          app_file=$(ls src-tauri/target/release/bundle/macos/*.app | head -n 1)
          dmg_file=$(ls src-tauri/target/release/bundle/dmg/*.dmg | head -n 1)
          if [ -z "$app_file" ] && [ -z "$dmg_file" ]; then
            exit 1
          fi
      - run: open "$(ls src-tauri/target/release/bundle/macos/*.app | head -n 1)"; sleep 5; pkill -f "$(ls src-tauri/target/release/bundle/macos/*.app | head -n 1)" || true
      - uses: actions/upload-artifact@v4
        with:
          name: macos-intel-app
          path: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/macos/*.app
          if-no-files-found: error
          retention-days: 30

  build-macos-arm:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 24
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-aarch64-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-aarch64-
            ${{ runner.os }}-cargo-
      - run: bun install
      - run: rustup target add aarch64-apple-darwin
      - run: bun tauri build
      - run: |
          app_file=$(ls src-tauri/target/release/bundle/macos/*.app | head -n 1)
          dmg_file=$(ls src-tauri/target/release/bundle/dmg/*.dmg | head -n 1)
          if [ -z "$app_file" ] && [ -z "$dmg_file" ]; then
            exit 1
          fi
      - run: open "$(ls src-tauri/target/release/bundle/macos/*.app | head -n 1)"; sleep 5; pkill -f "$(ls src-tauri/target/release/bundle/macos/*.app | head -n 1)" || true
      - uses: actions/upload-artifact@v4
        with:
          name: macos-arm-app
          path: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/macos/*.app
          if-no-files-found: error
          retention-days: 30
