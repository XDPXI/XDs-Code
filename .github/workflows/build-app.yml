name: Build Tauri App

on:
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 24

      - name: Install bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install dependencies
        run: bun install

      - name: Build Tauri app (Windows)
        run: bun tauri build

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v5
        with:
          name: windows-app
          path: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
            src-tauri/target/release/*.exe
          if-no-files-found: error
          retention-days: 30

  build-macos-intel:
    runs-on: macos-15-intel
    steps:
      - uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 24

      - name: Install bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-x86_64-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-x86_64-
            ${{ runner.os }}-cargo-

      - name: Install dependencies
        run: bun install

      - name: Add Rust target for Intel macOS
        run: rustup target add x86_64-apple-darwin

      - name: Build Tauri app for macOS Intel (x86_64)
        run: |
          echo "üèóÔ∏è Building for macOS Intel (x86_64)..."
          bun tauri build --target x86_64-apple-darwin

      - name: Upload macOS Intel artifacts
        uses: actions/upload-artifact@v5
        with:
          name: macos-intel-app
          path: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/macos/*.app
            src-tauri/target/x86_64-apple-darwin/release/bundle/dmg/*.dmg
            src-tauri/target/x86_64-apple-darwin/release/bundle/macos/*.app
          if-no-files-found: error
          retention-days: 30

  build-macos-arm:
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 24

      - name: Install bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            src-tauri/target/
          key: ${{ runner.os }}-cargo-aarch64-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-aarch64-
            ${{ runner.os }}-cargo-

      - name: Install dependencies
        run: bun install

      - name: Add Rust target for Apple Silicon macOS
        run: rustup target add aarch64-apple-darwin

      - name: Build Tauri app for macOS Apple Silicon (arm64)
        run: |
          echo "üèóÔ∏è Building for macOS Apple Silicon (arm64)..."
          bun tauri build

      - name: Upload macOS Apple Silicon artifacts
        uses: actions/upload-artifact@v5
        with:
          name: macos-arm-app
          path: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/macos/*.app
            src-tauri/target/aarch64-apple-darwin/release/bundle/dmg/*.dmg
            src-tauri/target/aarch64-apple-darwin/release/bundle/macos/*.app
          if-no-files-found: error
          retention-days: 30
